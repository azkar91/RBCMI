/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Beans.Caso;
import Beans.Resultado;
import Beans.Solucao;
import javax.swing.JOptionPane;
import jcolibri.cbrcore.CBRCase;

/**
 *
 * @author wanderson
 */
public class JDAdaptaCaso extends javax.swing.JDialog {

    /**
     * Creates new form JDAdaptaCaso
     */
    public JDAdaptaCaso(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgAdaptar = new javax.swing.ButtonGroup();
        jpEscolha = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rbRes = new javax.swing.JRadioButton();
        rbSol = new javax.swing.JRadioButton();
        rbAmbos = new javax.swing.JRadioButton();
        rbNenhum = new javax.swing.JRadioButton();
        btFechar = new javax.swing.JButton();
        btGravar = new javax.swing.JButton();
        jpAdptar = new javax.swing.JPanel();
        lbRes = new javax.swing.JLabel();
        lbSol = new javax.swing.JLabel();
        spSol = new javax.swing.JScrollPane();
        taSolucao = new javax.swing.JTextArea();
        spRes = new javax.swing.JScrollPane();
        taResultado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Adaptar Caso");

        jpEscolha.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Escolha o o que se deseja adaptar:");

        bgAdaptar.add(rbRes);
        rbRes.setText("Somente Resultado");
        rbRes.setToolTipText("Selecione esta opção para adaptar somente o resultado do clico, isto é, o diagnóstico do problema.");
        rbRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbResActionPerformed(evt);
            }
        });

        bgAdaptar.add(rbSol);
        rbSol.setText("Somente Solução");
        rbSol.setToolTipText("Selecione esta opção para adaptar somente a solução do clico, isto é, a ação que corrige o problema.");
        rbSol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSolActionPerformed(evt);
            }
        });

        bgAdaptar.add(rbAmbos);
        rbAmbos.setText("Resultado e Solução");
        rbAmbos.setToolTipText("Selecione esta opção para adaptar o resultado e a solução do clico, isto é, o diagnóstico e a correção do problema.");
        rbAmbos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAmbosActionPerformed(evt);
            }
        });

        bgAdaptar.add(rbNenhum);
        rbNenhum.setSelected(true);
        rbNenhum.setText("Não adaptar");
        rbNenhum.setToolTipText("Selecione esta opção para não adaptar nada, isto ocorre quando a similaridade é idêntica.");
        rbNenhum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNenhumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpEscolhaLayout = new javax.swing.GroupLayout(jpEscolha);
        jpEscolha.setLayout(jpEscolhaLayout);
        jpEscolhaLayout.setHorizontalGroup(
            jpEscolhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEscolhaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpEscolhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(rbRes)
                    .addComponent(rbSol)
                    .addComponent(rbAmbos)
                    .addComponent(rbNenhum))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpEscolhaLayout.setVerticalGroup(
            jpEscolhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEscolhaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbRes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbSol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbAmbos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbNenhum)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btFechar.setText("Fechar");
        btFechar.setToolTipText("Cancela e fecha a janela atual.");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        btGravar.setText("Gravar");
        btGravar.setToolTipText("Grava e adapta o caso.");
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });

        jpAdptar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbRes.setText("Resultado");

        lbSol.setText("Solução");

        taSolucao.setColumns(20);
        taSolucao.setLineWrap(true);
        taSolucao.setRows(5);
        taSolucao.setToolTipText("Solução do caso, a ação corretiva que soluciona o problema.");
        taSolucao.setWrapStyleWord(true);
        taSolucao.setEnabled(false);
        spSol.setViewportView(taSolucao);

        taResultado.setColumns(20);
        taResultado.setLineWrap(true);
        taResultado.setRows(5);
        taResultado.setToolTipText("Resultado do clico, o diagnóstico do caso.");
        taResultado.setWrapStyleWord(true);
        taResultado.setEnabled(false);
        spRes.setViewportView(taResultado);

        javax.swing.GroupLayout jpAdptarLayout = new javax.swing.GroupLayout(jpAdptar);
        jpAdptar.setLayout(jpAdptarLayout);
        jpAdptarLayout.setHorizontalGroup(
            jpAdptarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAdptarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAdptarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spRes, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addGroup(jpAdptarLayout.createSequentialGroup()
                        .addGroup(jpAdptarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbRes)
                            .addComponent(lbSol))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(spSol))
                .addContainerGap())
        );
        jpAdptarLayout.setVerticalGroup(
            jpAdptarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAdptarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbRes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spRes, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbSol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spSol, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpAdptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpEscolha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpEscolha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpAdptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btFechar)
                    .addComponent(btGravar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbResActionPerformed
        // TODO add your handling code here:
        camposAdaptar();
    }//GEN-LAST:event_rbResActionPerformed

    private void rbSolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSolActionPerformed
        // TODO add your handling code here:
        camposAdaptar();
    }//GEN-LAST:event_rbSolActionPerformed

    private void rbAmbosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAmbosActionPerformed
        // TODO add your handling code here:
        camposAdaptar();
    }//GEN-LAST:event_rbAmbosActionPerformed

    private void rbNenhumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNenhumActionPerformed
        // TODO add your handling code here:
        camposAdaptar();
    }//GEN-LAST:event_rbNenhumActionPerformed

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed
        // TODO add your handling code here:
        adaptar();
        this.setVisible(false);
    }//GEN-LAST:event_btGravarActionPerformed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        // TODO add your handling code here:
        _casoInserir = null;
        this.setVisible(false);
    }//GEN-LAST:event_btFecharActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDAdaptaCaso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDAdaptaCaso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDAdaptaCaso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDAdaptaCaso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDAdaptaCaso dialog = new JDAdaptaCaso(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgAdaptar;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btGravar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jpAdptar;
    private javax.swing.JPanel jpEscolha;
    private javax.swing.JLabel lbRes;
    private javax.swing.JLabel lbSol;
    private javax.swing.JRadioButton rbAmbos;
    private javax.swing.JRadioButton rbNenhum;
    private javax.swing.JRadioButton rbRes;
    private javax.swing.JRadioButton rbSol;
    private javax.swing.JScrollPane spRes;
    private javax.swing.JScrollPane spSol;
    private javax.swing.JTextArea taResultado;
    private javax.swing.JTextArea taSolucao;
    // End of variables declaration//GEN-END:variables
    private Resultado res;
    private Solucao sol;
    private Caso caso;
    private Resultado novoRes;
    private Solucao novaSol;
    private CBRCase _casoInserir;
    
    public void preparaAdpatacao(CBRCase _caso, Caso casoAtual) {
        
        res = (Resultado)_caso.getResult();
        sol = (Solucao)_caso.getSolution();
        caso = casoAtual;
        
        taSolucao.setText(sol.getDesSolucao());
        taResultado.setText(res.getDesResultado());
        
    }
    
    private void camposAdaptar() {
        
        if (rbNenhum.isSelected()) {
            taResultado.setEnabled(false);
            taSolucao.setEnabled(false);
            taResultado.setText(res.getDesResultado());
            taSolucao.setText(sol.getDesSolucao());
        } else {
            if (rbAmbos.isSelected()) {
                taResultado.setEnabled(true);
                taSolucao.setEnabled(true);
            } else {
                if (rbRes.isSelected()) {
                    taResultado.setEnabled(true);
                    taSolucao.setEnabled(false);
                    taSolucao.setText(sol.getDesSolucao());
                } else {
                    taSolucao.setEnabled(true);
                    taResultado.setEnabled(false);
                    taResultado.setText(res.getDesResultado());
                }
            }
        }
        
    }
    
    private void adaptar() {

        if (rbNenhum.isSelected()) {
            novoRes = res;
            novaSol = sol;
        } else {
            if (rbAmbos.isSelected()) {
                if (camposEmBranco()) return;
                novaSol = new Solucao();
                novaSol.setDesSolucao(taSolucao.getText());
                novoRes = new Resultado();
                novoRes.setDesResultado(taResultado.getText());
            } else {
                if (rbRes.isSelected()) {
                    if (camposEmBranco()) return;
                    novaSol = sol;
                    novoRes = new Resultado();
                    novoRes.setDesResultado(taResultado.getText());
                } else {
                    if (camposEmBranco()) return;
                    novoRes = res;
                    novaSol = new Solucao();
                    novaSol.setDesSolucao(taSolucao.getText());
                }
            }
        }
        
        caso.setResultado(novoRes);
        caso.setSolucao(novaSol);
        _casoInserir = new CBRCase();
        _casoInserir.setDescription(caso);
        _casoInserir.setResult(novoRes);
        _casoInserir.setSolution(novaSol);

    }
     
    private boolean camposEmBranco() {
        if(taResultado.getText().equals("") || taSolucao.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campos Solução e/ou Resultado não podem estar em branco!", "Erro", JOptionPane.ERROR_MESSAGE);
            return true;
        } else {
            return false;
        }
    }
    
    public CBRCase getCaso() {
        return _casoInserir;
    }
    
}
