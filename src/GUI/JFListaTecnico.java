/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Beans.Tecnico;
import DAO.DAOTecnico;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wanderson
 */
public class JFListaTecnico extends javax.swing.JFrame {

    /**
     * Creates new form JFListaTecnico
     */
    public JFListaTecnico() {
        initComponents();
        initTecnico();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spCliente = new javax.swing.JScrollPane();
        jtTecnico = new javax.swing.JTable();
        btCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Técnicos");

        jtTecnico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF/CNPJ", "Telefone 1", "Telefone 2", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTecnico.setToolTipText("Tabela com dados dos técnicos, é possível editar as informações diretamente na tabela.");
        jtTecnico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtTecnicoKeyTyped(evt);
            }
        });
        spCliente.setViewportView(jtTecnico);

        btCancelar.setText("Fechar");
        btCancelar.setToolTipText("Fecha a janela atual.");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btCancelar)
                        .addGap(12, 12, 12))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCancelar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void jtTecnicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTecnicoKeyTyped
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jtTecnicoKeyTyped

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JTable jtTecnico;
    private javax.swing.JScrollPane spCliente;
    // End of variables declaration//GEN-END:variables

    private void initTecnico() {
        
        ((DefaultTableCellRenderer)jtTecnico.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        jtTecnico.getColumnModel().getColumn(0).setPreferredWidth(10);
        jtTecnico.getColumnModel().getColumn(1).setPreferredWidth(180);
        jtTecnico.getColumnModel().getColumn(3).setPreferredWidth(50);
        jtTecnico.getColumnModel().getColumn(4).setPreferredWidth(50);
        jtTecnico.getColumnModel().getColumn(5).setPreferredWidth(120);
        listarTecnico();
        
        jtTecnico.getModel().addTableModelListener(new TableModelListener(){
            @Override
            public void tableChanged(TableModelEvent e) {
            
                int row = e.getFirstRow();
                Tecnico tecnico = new Tecnico();
                DAOTecnico daoTecnico = new DAOTecnico();
                DefaultTableModel dtm = (DefaultTableModel) e.getSource();
           
                tecnico.setIdTecnico((Integer)dtm.getValueAt(row, 0));
                tecnico.setNmTecnico((String)dtm.getValueAt(row, 1));
                tecnico.setCpfTecnico((String)dtm.getValueAt(row, 2));
                tecnico.setTel1tecnico((String)dtm.getValueAt(row, 3));
                tecnico.setTel2tecnico((String)dtm.getValueAt(row, 4));
                tecnico.setEmailTecnico((String)dtm.getValueAt(row, 5));
            
                try {
                    daoTecnico.alterar(tecnico);
                    System.out.println("Técnico armazenado com sucesso!");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Houve algum problema na atualização do técnico, detalhes:\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                }
            
            }
        });
        
    }  
  
    
    private void listarTecnico() {
        
        DefaultTableModel dtm = (DefaultTableModel)jtTecnico.getModel();
        DAOTecnico daoTecnico = new DAOTecnico();
        Tecnico tecnico;
        List listaTecnico;
        
        try {
            listaTecnico = daoTecnico.listar("order by idTecnico");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Houve algum problema com a listagem dos técnicos, detalhes:\n" + ex, "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
         
        for(int i=0; i<listaTecnico.size(); i++) { //insere resultado nas tabelas
            
           tecnico = (Tecnico)listaTecnico.get(i);
            
           dtm.addRow(new Object[]{tecnico.getIdTecnico(), tecnico.getNmTecnico(), tecnico.getCpfTecnico(), tecnico.getTel1tecnico(), tecnico.getTel2tecnico(), tecnico.getEmailTecnico()});     
            
       }
        
    }
    
}
